"""id is req

Revision ID: a5fd6dda2863
Revises: 
Create Date: 2024-05-19 11:03:23.265173

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a5fd6dda2863'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('taskfields',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.String(length=100), nullable=False),
    sa.Column('value', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('firstName', sa.String(length=100), nullable=False),
    sa.Column('lastName', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('author', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('executor', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=100), nullable=False),
    sa.Column('related_tasks', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author'], ['users.id'], name='fk_tasks_users_id_author'),
    sa.ForeignKeyConstraint(['executor'], ['users.id'], name='fk_tasks_users_id_executor'),
    sa.ForeignKeyConstraint(['related_tasks'], ['tasks.id'], name='fk_tasks_tasks_id_related_tasks'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('desks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('tasks', sa.Integer(), nullable=True),
    sa.Column('additional_fields', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['additional_fields'], ['taskfields.id'], name='fk_desks_taskfields_id_additional_fields', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tasks'], ['tasks.id'], name='fk_desks_tasks_id_tasks'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user', sa.Integer(), nullable=True),
    sa.Column('task', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['task'], ['tasks.id'], name='fk_tasks_users_tasks_task_id', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user'], ['users.id'], name='fk_tasks_users_users_user_id', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tasks_users')
    op.drop_table('desks')
    op.drop_table('tasks')
    op.drop_table('users')
    op.drop_table('taskfields')
    # ### end Alembic commands ###
